spring.application.name=sudoku

# Override if necessary (the default is 8080)
server.port=8080

spring.datasource.url=jdbc:postgresql://localhost:5432/sudoku
spring.datasource.username=postgres
spring.datasource.password=postgres

spring.jpa.properties.hibernate.default_schema=public
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=validate

# See for example https://thorben-janssen.com/lazyinitializationexception/#avoid-the-open-session-in-view-antipattern
spring.jpa.open-in-view=false

# See https://discourse.hibernate.org/t/entitygraph-has-limit-in-depth-levels-for-hibernate-6-1-6-final-and-6-1-7-final/7439/9
# Note that the default is 2
spring.jpa.properties.hibernate.max_fetch_depth=4

logging.level.org.jooq.tools.LoggerListener=DEBUG

# In particular to trace Hibernate's StatelessSession
logging.level.org.hibernate=TRACE

# See https://www.baeldung.com/spring-transaction-active
logging.level.org.springframework.transaction.interceptor=TRACE

# Property "underlyingSessionType" is not given here. It can have values "jakarta.persistence.EntityManager"
# (the default), "org.jooq.DSLContext" or "org.hibernate.StatelessSession". Depending on that value,
# the corresponding service implementation is used. The value is passed as a system property.

# Show the application wiring
debug=true
